% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getNearestPointOnLine.R
\name{getNearestPointOnLine}
\alias{getNearestPointOnLine}
\title{Find nearest point to lines}
\usage{
getNearestPointOnLine(
  p,
  l = buffer300.wintri$df,
  crs.to.use = buffer300.wintri$crs
)
}
\arguments{
\item{p}{the points as a \code{sp::SpatialPoints} object, dataframe, matrix or vector (one point). If a dataframe or matrix, column 1 is the x locations, column 2 is the y locations. The units and projection of the points need to
match the lines. If \code{sp::SpatialPoints} is used, this can be checked. Otherwise the user needs to ensure that they match.}

\item{l}{the lines as a \code{sp::SpatialPolygons} object, \code{sp::SpatialLines} object, dataframe, matrix or vector (one point).   If a dataframe or matrix, column 1 is the x locations, column 2 is the y locations. If there are multiple lines, the third column should be the id of the lines.}

\item{crs.to.use}{name of the projection. must be one that
the \strong{sp} package recognizes.}
}
\value{
vector of points
}
\description{
This will work if the lines are specified as a \code{sp::SpatialLines} or \code{sp::SpatialPolygon} object. If the latter, the object is converted to a
\code{sp::SpatialLines} object. It will also
work if the lines are specified in
a dataframe (or matrix) with x, y, and id (optional), which is a
coordinate matrix. The points can be a \code{sp::SpatialPoints} object,
a dataframe or matrix with each
row the x-y coordinates with an optional id for multiple lines or it can
be a vector if it is only one point.
}
\details{
Note, the \code{maptools::snapPointsToLines()} function should do this, but it is
not working with the \code{SpatialLines} object produced by converting a polygon
to lines. It may work fine if one converts the \code{SpatialPolygon} to
a \code{SpatialLinesDataFrame} with the proper line id's.

The default behavior is to use the 300km coastline buffer with the
Winkel Tripel projection.
}
\keyword{image}
