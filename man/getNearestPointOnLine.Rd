% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getNearestPointOnLine.R
\name{getNearestPointOnLine}
\alias{getNearestPointOnLine}
\title{Find nearest point to lines}
\usage{
getNearestPointOnLine(
  l,
  p,
  smooth.method = c("ksmooth", "none", "gSimplify"),
  ...
)
}
\arguments{
\item{l}{the lines as a \code{sp::SpatialLines} object.}

\item{p}{the points as a \code{sp::SpatialPoints} object.}

\item{smooth.method}{type of method to use to smooth the offshore line. This is needed to have the offshore points spread regularly along the line and not be affected by divits.}

\item{...}{parameters to specify smoothing. If "gSimplify", \code{tol=30} is ok. If "ksmooth", \code{smoothness=5} is ok.}
}
\value{
vector of points
}
\description{
Lines are specified as a \code{sp::SpatialLines} object. The points are a
\code{sp::SpatialPoints} object. If there are multiple lines in the lines
object, the nearest point might be wrong so results should be checked.
}
\details{
Note, the \code{maptools::snapPointsToLines()} function should do this, but it is
not working with the \code{SpatialLines} object produced by converting a polygon
to lines. It may work fine if one converts the \code{SpatialPolygon} to
a \code{SpatialLinesDataFrame} with the proper line id's.

If the line is wavey, smoothing can help find points that look more
perpendicular to the coast.
}
\keyword{auto}
